<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>红纸</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.zhz.io/"/>
  <updated>2016-12-15T09:01:08.000Z</updated>
  <id>http://www.zhz.io/</id>
  
  <author>
    <name>HongZhi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Cocoapods常用命令</title>
    <link href="http://www.zhz.io/2016/12/15/Cocoapods%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.zhz.io/2016/12/15/Cocoapods常用命令/</id>
    <published>2016-12-15T08:57:23.000Z</published>
    <updated>2016-12-15T09:01:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-Pod基础"><a href="#0x00-Pod基础" class="headerlink" title="0x00 Pod基础"></a>0x00 Pod基础</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pod --help 这个可以用来所有的命令</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ pod [Commond] [Options]</div><div class="line">$ pod install --verbose --no-repo-update</div></pre></td></tr></table></figure>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">文件目录</div><div class="line">which pod Pod组件安装的目录</div><div class="line"></div><div class="line">Find里面进入./cocoapods可以看到你本地所有的仓库</div></pre></td></tr></table></figure>
<p>Commonds<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pod setup 重新安装master仓库，最好别用。因为会把master库删掉，然后下载又很慢，可以用Airdrop让别人给你传一份。</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">pod install  </div><div class="line">官方说法:Install project dependencies according to versions from a Podfile.lock</div><div class="line">解释:解析.podfile文件，跟本地的podfile进行比对，并按不同之处重新进行依赖关系修复。</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">pod update </div><div class="line">官方说法:Update outdated project dependencies and create new Podfile.lock</div><div class="line">解释:解析.podfile文件，忽略本地的Podfile.lock文件，重新生成Podfile</div><div class="line"></div><div class="line">pod update Your_Project_Name</div><div class="line">解释:仅仅更新Name仓库</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">pod search [name]</div><div class="line">官方说法:Search for pods</div><div class="line">解释:扫描本地的./cocoapods目录下所有的podspec。匹配含有name的项目</div></pre></td></tr></table></figure>
<p>Options </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">--verbose </div><div class="line">官方说法:Show more debugging information</div><div class="line">解释:显示出所有Debug信息</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">--no-repo-update</div><div class="line">解释:不去更新现有的本地仓库（包括master，和私有的）</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">--version 当前使用Cocoapods的版本</div></pre></td></tr></table></figure>
<p>###本地gems的程序安装包，可以看到Cocoapods一共安装了那些组件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ gem list</div></pre></td></tr></table></figure></p>
<p>###找到对应的组件，可以移除安装包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo gem uninstall cocoapods -v 0.35.0</div></pre></td></tr></table></figure></p>
<p>###安装制定版本的安装包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo gem install cocoapods -v 0.34.4</div></pre></td></tr></table></figure></p>
<p>###查看本地的源路径<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ gem sources -l</div></pre></td></tr></table></figure></p>
<p>###切换Gem Source<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#淘宝的据说已经不维护了</div><div class="line">$ gem sources --add https://gems.ruby-china.org/ #添加源</div><div class="line">$ gem sources --remove https://rubygems.org/ #移除源</div></pre></td></tr></table></figure></p>
<h1 id="0x00-Pod进阶"><a href="#0x00-Pod进阶" class="headerlink" title="0x00 Pod进阶"></a>0x00 Pod进阶</h1><p>Commonds<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">pod cache </div><div class="line">官方解释:Manipulate the CocoaPods cache</div><div class="line">解释:本地的依赖库缓存，不是项目工程Pods下的缓存。</div><div class="line"></div><div class="line">pod cache list 显示所有的本地缓存</div><div class="line">pod cache clean Your_Project_Name --all 清除所有的Your_Project_Name在本地的缓存</div><div class="line">pod cache clean Your_Project_Name 会显示出所有的Your_Project_Name缓存，然后再根据你想要的去清除</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">pod repo 管理仓库的命令</div><div class="line">pod repo update 更新本地所有仓库</div><div class="line">pod repo update [Name] 仅仅更新Name仓库</div><div class="line">pod repo push [Name.podspec] [本地仓库名字] 推送一个私有项目的配置文件podspec 到制定的私有仓库</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pod trunk 将项目配置推送到公共的master仓库</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">pod outdated</div><div class="line">官方说法:Show outdated project dependencies</div><div class="line">解释:分析现有的依赖项，并与最新的比较。如图所示</div></pre></td></tr></table></figure>
<p>###运行不同版本的pod前提是你本地有不同版本的pod<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pod _1.0.1_ install</div></pre></td></tr></table></figure></p>
<h1 id="0x00-Pod插件"><a href="#0x00-Pod插件" class="headerlink" title="0x00 Pod插件"></a>0x00 Pod插件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gem install cocoapods-package 安装用来打包成静态库的插件</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pod package [Name.podspec] [Options]</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">--force 替换本地已有的文件</div><div class="line">--no-mangle 接触Pod中已有的依赖冠以</div><div class="line">--library 打包成.a静态库</div><div class="line">--exclude-deps 不把依赖项打包进入项目</div><div class="line">--spec-sources=private,https://github.com/CocoaPods/Specs.git 如果项目中有私有源一定要加上这个</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-Pod基础&quot;&gt;&lt;a href=&quot;#0x00-Pod基础&quot; class=&quot;headerlink&quot; title=&quot;0x00 Pod基础&quot;&gt;&lt;/a&gt;0x00 Pod基础&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;pod --help 这个可以用来所有的命令&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ pod [Commond] [Options]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ pod install --verbose --no-repo-update&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Cocoapods" scheme="http://www.zhz.io/tags/Cocoapods/"/>
    
  </entry>
  
  <entry>
    <title>Share Keychain Access</title>
    <link href="http://www.zhz.io/2016/08/25/Shared%20Keychain%20Access/"/>
    <id>http://www.zhz.io/2016/08/25/Shared Keychain Access/</id>
    <published>2016-08-25T08:57:23.000Z</published>
    <updated>2016-12-15T10:04:43.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-什么是Keychain"><a href="#0x00-什么是Keychain" class="headerlink" title="0x00 什么是Keychain"></a>0x00 什么是Keychain</h2><p>据介绍，Keychain是iOS系统官方提供的安全存储容器，我们可以用它来存一些敏感信息，EG:密码，用户名，证书等等。<br>Mac电脑上自带的Keychain Access.app就是苹果自己的Keychain读取软件。<br>Keychain是保存在沙盒之外的数据库的，所以在删除App后，在重新下载App后，这些信息依旧存在，并且你可以通过设置一些属性，让你的数据保#####存到iCloud中，达到跨设备存储。</p>
<h2 id="0x01-Keychain本质是什么"><a href="#0x01-Keychain本质是什么" class="headerlink" title="0x01 Keychain本质是什么"></a>0x01 Keychain本质是什么</h2><p>Keychain存储本质是Sqlite。真机地址：/private/var/Keychains/keychain-2.db<br>既然是Sqlite，那么Keychain存储的对象（后面统称为Item），即对应Sqlite上的一条记录而已。</p>
<a id="more"></a>
<h2 id="0x02-Item"><a href="#0x02-Item" class="headerlink" title="0x02 Item"></a>0x02 Item</h2><p>Item 结构</p>
<ul>
<li>Class -&gt; kSecClass //指向对应的表结构</li>
<li>Attributes -&gt; kSecAttrXXXX //每个表中对应的字段</li>
<li>Value -&gt; kSecValueXXX //存储的类型</li>
</ul>
<p>Class<br>有Sqlite，那么就会有对应的表。<br>Item在保存对象的时候，你需要指定你要保存的表。</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">extern</span> <span class="keyword">const</span> <span class="built_in">CFStringRef</span> kSecClassGenericPassword     <span class="comment">//一般的密码存储表，基本用这个为主，对应genp表</span></div><div class="line"><span class="keyword">extern</span> <span class="keyword">const</span> <span class="built_in">CFStringRef</span> kSecClassInternetPassword      <span class="comment">//用来存储网络密码的表，对应inet表</span></div><div class="line"><span class="keyword">extern</span> <span class="keyword">const</span> <span class="built_in">CFStringRef</span> kSecClassCertificate           <span class="comment">//用来存储证书表，对应cert表</span></div><div class="line"><span class="keyword">extern</span> <span class="keyword">const</span> <span class="built_in">CFStringRef</span> kSecClassKey                     <span class="comment">//存一些Key之类的东西，对应keys表</span></div><div class="line"><span class="keyword">extern</span> <span class="keyword">const</span> <span class="built_in">CFStringRef</span> kSecClassIdentity                  <span class="comment">//一些特殊的认证信息之类的，这个不知道。</span></div></pre></td></tr></table></figure>
<p>Attributes<br>关于Item的属性，对应的不同表是不同的。每个都介绍不现实，讲讲最常用的kSecClassGenericPassword表中的一些字段吧</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>Value值</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>kSecAttrAccessible</td>
<td>kSecAttrAccessibleWhenUnlocked （Default）</td>
<td>你能获取到Keychain的数据必须在设备被解锁的情况下获取</td>
</tr>
<tr>
<td></td>
<td>kSecAttrAccessibleAfterFirstUnlock</td>
<td>Keychain的数据在设备第一次解锁之后就能够获取使用</td>
</tr>
<tr>
<td></td>
<td>kSecAttrAccessibleAlways</td>
<td>Keychain数据始终可以获取到</td>
</tr>
<tr>
<td>kSecAttrAccessGroup</td>
<td>自定义Like（@”AppIdentifierPrefix.com.hongzhi.test”）</td>
<td>设置你的存储区域，后面会详细讲</td>
</tr>
<tr>
<td>kSecAttrAccount</td>
<td>自定义</td>
<td>标识此条数据的主Key之一</td>
</tr>
<tr>
<td>kSecAttrService</td>
<td>自定义</td>
<td>标识此条数据的主Key之一</td>
</tr>
<tr>
<td>kSecAttrGeneric</td>
<td>自定义</td>
<td>非主键用来标识</td>
</tr>
<tr>
<td>kSecAttrSynchronizable</td>
<td>BOOL</td>
<td>标识是否同步到iCloud</td>
</tr>
</tbody>
</table>
<blockquote>
<p>Note:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kSecAttrAccessible还有另外三种是在上面这几个后面加ThisDeviceOnly，则数据不会跟随设备移动，会跟设备绑定。<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AppIdentifierPrefix是你开发证书的唯一标识符号，com.hongzhi.test是你应用的BundleId。</p>
</blockquote>
<p>Value</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>Value值</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>kSecValueData</td>
<td>Get或者Set</td>
<td>这个就是你要存数据的Value，只能存NSData对象</td>
</tr>
</tbody>
</table>
<h2 id="0x03-用法"><a href="#0x03-用法" class="headerlink" title="0x03 用法"></a>0x03 用法</h2><p>既然是Sqlite数据库的存储，那么肯定就有增删该查。<br>每个函数都会有一个OSStatus的标识，标识操作是否成功,更多的标识参考SecBase.h文件中的OSStatus枚举值。</p>
<ol>
<li>SecItemAdd 添加一个keychain item</li>
<li>SecItemUpdate 修改一个keychain item</li>
<li>SecItemCopyMatching 搜索一个keychain item</li>
<li>SecItemDelete 删除一个keychain item</li>
</ol>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">NSMutableDictionary</span> *)newSearchDictionary:(<span class="built_in">NSString</span> *)identifier &#123;</div><div class="line">    <span class="built_in">NSMutableDictionary</span> *searchDictionary = [[<span class="built_in">NSMutableDictionary</span> alloc] init];</div><div class="line">    <span class="comment">//指定item的类型为GenericPassword</span></div><div class="line">    [searchDictionary setObject:(<span class="keyword">id</span>)kSecClassGenericPassword forKey:(<span class="keyword">id</span>)kSecClass];</div><div class="line">    </div><div class="line">    <span class="comment">//类型为GenericPassword的信息必须提供以下两条属性作为unique identifier</span></div><div class="line">    [searchDictionary setObject:encodedIdentifier forKey:(<span class="keyword">id</span>)kSecAttrAccount]；</div><div class="line">    [searchDictionary setObject:encodedIdentifier forKey:(<span class="keyword">id</span>)kSecAttrService]；</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> searchDictionary;</div><div class="line">&#125;</div><div class="line">- (<span class="built_in">NSData</span> *)searchKeychainCopyMatching:(<span class="built_in">NSString</span> *)identifier &#123;</div><div class="line">    <span class="built_in">NSMutableDictionary</span> *searchDictionary = [<span class="keyword">self</span> newSearchDictionary:identifier];</div><div class="line">    </div><div class="line">    <span class="comment">//在搜索keychain item的时候必须提供下面的两条用于搜索的属性</span></div><div class="line">    <span class="comment">//只返回搜索到的第一条item</span></div><div class="line">    [searchDictionary setObject:(<span class="keyword">id</span>)kSecMatchLimitOne forKey:(<span class="keyword">id</span>)kSecMatchLimit];</div><div class="line">    <span class="comment">//返回item的kSecValueData</span></div><div class="line">    [searchDictionary setObject:(<span class="keyword">id</span>)kCFBooleanTrue forKey:(<span class="keyword">id</span>)kSecReturnData];</div><div class="line">    </div><div class="line">    <span class="built_in">NSData</span> *result = <span class="literal">nil</span>;</div><div class="line">    OSStatus status = SecItemCopyMatching((<span class="built_in">CFDictionaryRef</span>)searchDictionary,</div><div class="line">                                          (<span class="built_in">CFTypeRef</span> *)&amp;result);</div><div class="line">    <span class="keyword">return</span> result;</div><div class="line">&#125;</div><div class="line">- (<span class="built_in">BOOL</span>)createKeychainValue:(<span class="built_in">NSString</span> *)password forIdentifier:(<span class="built_in">NSString</span> *)identifier &#123;</div><div class="line">    <span class="comment">//设置添加的字典</span></div><div class="line">    <span class="built_in">NSMutableDictionary</span> *dictionary = [<span class="keyword">self</span> newSearchDictionary:identifier];</div><div class="line">    </div><div class="line">    <span class="built_in">NSData</span> *passwordData = [password dataUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>];</div><div class="line">    [dictionary setObject:passwordData forKey:(<span class="keyword">id</span>)kSecValueData];</div><div class="line">    </div><div class="line">    OSStatus status = SecItemAdd((<span class="built_in">CFDictionaryRef</span>)dictionary, <span class="literal">NULL</span>);</div><div class="line">    <span class="keyword">if</span> (status == errSecSuccess) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="literal">NO</span>;</div><div class="line">&#125;</div><div class="line">- (<span class="built_in">BOOL</span>)updateKeychainValue:(<span class="built_in">NSString</span> *)password forIdentifier:(<span class="built_in">NSString</span> *)identifier &#123;</div><div class="line">    <span class="built_in">NSMutableDictionary</span> *searchDictionary = [<span class="keyword">self</span> newSearchDictionary:identifier];</div><div class="line">    </div><div class="line">    <span class="built_in">NSMutableDictionary</span> *updateDictionary = [[<span class="built_in">NSMutableDictionary</span> alloc] init];</div><div class="line">    <span class="built_in">NSData</span> *passwordData = [password dataUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>];</div><div class="line">    [updateDictionary setObject:passwordData forKey:(<span class="keyword">id</span>)kSecValueData];</div><div class="line">    </div><div class="line">    OSStatus status = SecItemUpdate((<span class="built_in">CFDictionaryRef</span>)searchDictionary,</div><div class="line">                                    (<span class="built_in">CFDictionaryRef</span>)updateDictionary);</div><div class="line">    <span class="keyword">if</span> (status == errSecSuccess) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="literal">NO</span>;</div><div class="line">&#125;</div><div class="line">- (<span class="keyword">void</span>)deleteKeychainValue:(<span class="built_in">NSString</span> *)identifier &#123;</div><div class="line">    <span class="built_in">NSMutableDictionary</span> *searchDictionary = [<span class="keyword">self</span> newSearchDictionary:identifier];</div><div class="line">    SecItemDelete((<span class="built_in">CFDictionaryRef</span>)searchDictionary);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="0x04-关于iCloud备份"><a href="#0x04-关于iCloud备份" class="headerlink" title="0x04 关于iCloud备份"></a>0x04 关于iCloud备份</h2><ol>
<li>使用kSecAttrSynchronizable可以对存储的值进行跨设备的备份，但是添加这个字段后，搜索会以这个值作为主要的Key。</li>
<li>搜索匹配的时候要带上这个字段才能查询到相应的Item。</li>
</ol>
<h2 id="0x05-App间共享数据"><a href="#0x05-App间共享数据" class="headerlink" title="0x05 App间共享数据"></a>0x05 App间共享数据</h2><ol>
<li>关键东西：Keychain access group。</li>
<li>原理：Keychain通过Provisioning profile来区分应用，每个profile会带有相应的bundle id和添加的Access Group，应用保存的数据指定在对应的Access group中，如果没有在属性中设置，即存储在已bundle id命名的Access Group中。</li>
<li>非代码指定Access Group的话，就要在Capabilities中打开Keychain Sharing，在其中添加相应的BundleId，系统会自动帮你添加AppIdentifierPrefix，即Id值。<br>Use:<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[searchDictionary setObject:@“AppIdentifierPrefix.UC.testWriteKeychainSuit” forKey:(<span class="keyword">id</span>)kSecAttrAccessGroup];</div></pre></td></tr></table></figure>
</li>
</ol>
<blockquote>
<p>如果多个App指定了同一个Access group，并且它是由同一个证书下发的，那么这两个App就能够从这个Access Group中获取数据。</p>
</blockquote>
<h2 id="0xfe-总结"><a href="#0xfe-总结" class="headerlink" title="0xfe 总结"></a>0xfe 总结</h2><p>Keychain很方便，支持App间，设备间数据的传输，为一大群开发者解决了一堆的难题，但是也不能过度依赖于这个东西。Keychain的读取速度是NSUserDefault的3倍时长左右。一些简单的数据存储在Info.plist或者NSUserdefault中反而会更好。</p>
<h2 id="0xff-参考链接"><a href="#0xff-参考链接" class="headerlink" title="0xff 参考链接"></a>0xff 参考链接</h2><p><a href="https://developer.apple.com/videos/play/wwdc2013/709/" target="_blank" rel="external">2013届WWDC Keychain简介</a><br><a href="http://blog.sheliw.com/blog/2015/02/16/keychain/" target="_blank" rel="external">Max Blog Keychain</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-什么是Keychain&quot;&gt;&lt;a href=&quot;#0x00-什么是Keychain&quot; class=&quot;headerlink&quot; title=&quot;0x00 什么是Keychain&quot;&gt;&lt;/a&gt;0x00 什么是Keychain&lt;/h2&gt;&lt;p&gt;据介绍，Keychain是iOS系统官方提供的安全存储容器，我们可以用它来存一些敏感信息，EG:密码，用户名，证书等等。&lt;br&gt;Mac电脑上自带的Keychain Access.app就是苹果自己的Keychain读取软件。&lt;br&gt;Keychain是保存在沙盒之外的数据库的，所以在删除App后，在重新下载App后，这些信息依旧存在，并且你可以通过设置一些属性，让你的数据保#####存到iCloud中，达到跨设备存储。&lt;/p&gt;
&lt;h2 id=&quot;0x01-Keychain本质是什么&quot;&gt;&lt;a href=&quot;#0x01-Keychain本质是什么&quot; class=&quot;headerlink&quot; title=&quot;0x01 Keychain本质是什么&quot;&gt;&lt;/a&gt;0x01 Keychain本质是什么&lt;/h2&gt;&lt;p&gt;Keychain存储本质是Sqlite。真机地址：/private/var/Keychains/keychain-2.db&lt;br&gt;既然是Sqlite，那么Keychain存储的对象（后面统称为Item），即对应Sqlite上的一条记录而已。&lt;/p&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://www.zhz.io/tags/iOS/"/>
    
  </entry>
  
</feed>
